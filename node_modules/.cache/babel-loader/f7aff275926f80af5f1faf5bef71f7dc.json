{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { initialProfile } from '../utils/constants';\n\nfunction Validation() {\n  _s();\n\n  const [errors, setErrors] = React.useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [values, setValues] = React.useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [currentUser, setCurrentUser] = React.useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [submitError, setSubmitError] = React.useState(\"\");\n  const [isSubmitButtonDisabled, setIsSubmitButtonDisabled] = React.useState(false);\n  React.useEffect(() => {\n    const {\n      username,\n      email,\n      password\n    } = initialProfile;\n    setCurrentUser({ ...currentUser,\n      username: username,\n      email: email,\n      password: password\n    });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitError(\"API ещё не подключен\");\n    setCurrentUser({\n      username: values.username,\n      email: values.email,\n      password: values.password\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      validationMessage,\n      value\n    } = e.target;\n    setErrors({ ...errors,\n      [name]: validationMessage\n    });\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    errors,\n    values,\n    submitError,\n    isSubmitButtonDisabled,\n    currentUser\n  };\n}\n\n_s(Validation, \"hzVGjVlkaP2B3y9IGBC8E/zDJzw=\");\n\n_c = Validation;\nexport default Validation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"sources":["/Users/vatc/Desktop/praktikum/diploma/movies-explorer-frontend/src/utils/Validation.js"],"names":["React","initialProfile","Validation","errors","setErrors","useState","username","email","password","values","setValues","currentUser","setCurrentUser","submitError","setSubmitError","isSubmitButtonDisabled","setIsSubmitButtonDisabled","useEffect","handleSubmit","e","preventDefault","handleChange","name","validationMessage","value","target"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,oBAA7B;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,KAAK,CAACK,QAAN,CAAe;AACzCC,IAAAA,QAAQ,EAAE,EAD+B;AAEzCC,IAAAA,KAAK,EAAE,EAFkC;AAGzCC,IAAAA,QAAQ,EAAE;AAH+B,GAAf,CAA5B;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,KAAK,CAACK,QAAN,CAAe;AACzCC,IAAAA,QAAQ,EAAE,EAD+B;AAEzCC,IAAAA,KAAK,EAAE,EAFkC;AAGzCC,IAAAA,QAAQ,EAAE;AAH+B,GAAf,CAA5B;AAKA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACK,QAAN,CAAe;AACnDC,IAAAA,QAAQ,EAAE,EADyC;AAEnDC,IAAAA,KAAK,EAAE,EAF4C;AAGnDC,IAAAA,QAAQ,EAAE;AAHyC,GAAf,CAAtC;AAKA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCd,KAAK,CAACK,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACU,sBAAD,EAAyBC,yBAAzB,IAAsDhB,KAAK,CAACK,QAAN,CAC1D,KAD0D,CAA5D;AAIAL,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,UAAM;AAAEX,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,QAA+BP,cAArC;AACAW,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbL,MAAAA,QAAQ,EAAEA,QAFG;AAGbC,MAAAA,KAAK,EAAEA,KAHM;AAIbC,MAAAA,QAAQ,EAAEA;AAJG,KAAD,CAAd;AAMD,GARD,EAQG,EARH;;AAUA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,cAAc,CAAC,sBAAD,CAAd;AACAF,IAAAA,cAAc,CAAC;AACbN,MAAAA,QAAQ,EAAEG,MAAM,CAACH,QADJ;AAEbC,MAAAA,KAAK,EAAEE,MAAM,CAACF,KAFD;AAGbC,MAAAA,QAAQ,EAAEC,MAAM,CAACD;AAHJ,KAAD,CAAd;AAKD,GARD;;AAUA,QAAMa,YAAY,GAAIF,CAAD,IAAO;AAC1B,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,iBAAR;AAA2BC,MAAAA;AAA3B,QAAqCL,CAAC,CAACM,MAA7C;AACArB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACmB,IAAD,GAAQC;AAFA,KAAD,CAAT;AAIAb,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACa,IAAD,GAAQE;AAFA,KAAD,CAAT;AAID,GAVD;;AAYA,SAAO;AACLH,IAAAA,YADK;AAELH,IAAAA,YAFK;AAGLf,IAAAA,MAHK;AAILM,IAAAA,MAJK;AAKLI,IAAAA,WALK;AAMLE,IAAAA,sBANK;AAOLJ,IAAAA;AAPK,GAAP;AASD;;GA9DQT,U;;KAAAA,U;AAgET,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport {initialProfile} from '../utils/constants';\n\nfunction Validation() {\n  const [errors, setErrors] = React.useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [values, setValues] = React.useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [currentUser, setCurrentUser] = React.useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [submitError, setSubmitError] = React.useState(\"\");\n  const [isSubmitButtonDisabled, setIsSubmitButtonDisabled] = React.useState(\n    false\n  );\n\n  React.useEffect(() => {\n    const { username, email, password} = initialProfile;\n    setCurrentUser({\n      ...currentUser,\n      username: username,\n      email: email,\n      password: password,\n    })\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitError(\"API ещё не подключен\");\n    setCurrentUser({\n      username: values.username,\n      email: values.email,\n      password: values.password,\n    })\n  };\n\n  const handleChange = (e) => {\n    const { name, validationMessage, value } = e.target;\n    setErrors({\n      ...errors,\n      [name]: validationMessage,\n    });\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    errors,\n    values,\n    submitError,\n    isSubmitButtonDisabled,\n    currentUser\n  };\n}\n\nexport default Validation;\n"]},"metadata":{},"sourceType":"module"}